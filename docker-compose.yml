version: '3.8'

services:
  loki:
    image: grafana/loki:2.9.0
    container_name: rent-fb-loki
    restart: unless-stopped
    ports:
      - '3100:3100'
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - app-network

  promtail:
    image: grafana/promtail:2.9.0
    container_name: rent-fb-promtail
    restart: unless-stopped
    volumes:
      - ./promtail.yaml:/etc/promtail/promtail.yaml
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: -config.file=/etc/promtail/promtail.yaml
    networks:
      - app-network

  grafana:
    image: grafana/grafana:10.4.1
    container_name: rent-fb-grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - app-network
  redis:
    image: redis:7-alpine
    container_name: rent-fb-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    # Không expose port ra ngoài
    ports:
      - '6380:6379'
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:17-alpine
    container_name: rent-fb-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      # Bảo mật bổ sung
      POSTGRES_INITDB_ARGS: '--auth-host=scram-sha-256'
    # Không expose port ra ngoài
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build:
      context: .
      target: production
    container_name: rent-fb-app
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      REDIS_HOST: rent-fb-redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@rent-fb-postgres:5432/${POSTGRES_DB}
    ports:
      - '4002:4000' # Chỉ expose port cần thiết
    # Không mount source code
    user: '1001:1001' # Non-root user
    read_only: true # Read-only filesystem
    tmpfs:
      - /tmp
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:4000/health']
      interval: 30s
      timeout: 10s
      retries: 3
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE

volumes:
  grafana-storage:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  app-network:
    driver: bridge
    internal: false
